@model List<Habitacion>
@using SimpsonsHotel.Core.Classes
@using System.Globalization
@{
    ViewData["Title"] = "Habitaciones";
    var tipoFiltro = Context.Request.Query["tipo"].ToString();
    var disponibilidadFiltro = Context.Request.Query["disponibilidad"].ToString();
}

<h2 class="mb-4">Selecciona una habitación</h2>

<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Filtrar habitaciones</h5>
                <form class="row g-3" method="get" asp-action="Index">
                    <div class="col-md-4">
                        <label class="form-label card-features-title">Tipo</label>
                        <select class="form-select" name="tipo">
                            <option value="" selected="@(string.IsNullOrEmpty(tipoFiltro))">Todos los tipos</option>
                            <option value="1" selected="@(tipoFiltro == "1")">Habitación Sencilla</option>
                            <option value="2" selected="@(tipoFiltro == "2")">Habitación Ejecutiva</option>
                            <option value="3" selected="@(tipoFiltro == "3")">Suite</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label card-features-title">Disponibilidad</label>
                        <select class="form-select" name="disponibilidad">
                            <option value="" selected="@(string.IsNullOrEmpty(disponibilidadFiltro))">Todas</option>
                            <option value="disponible" selected="@(disponibilidadFiltro == "disponible")">Disponibles</option>
                            <option value="ocupada" selected="@(disponibilidadFiltro == "ocupada")">Ocupadas</option>
                        </select>
                    </div>
                    <div class="col-md-2 align-self-end">
                        <button type="submit" class="btn btn-primary d-block w-100">Filtrar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <div class="row row-cols-1 row-cols-md-3 g-4 mb-5">
        @foreach (var habitacion in Model)
        {
            @await Component.InvokeAsync("RoomCard", new { habitacion = habitacion })
        }
    </div>
}
else
{
    <div class="alert alert-warning mt-4" role="alert">
        No hay habitaciones que coincidan con los filtros seleccionados.
    </div>
}
